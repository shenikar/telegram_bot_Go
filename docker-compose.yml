services:
  postgres:
    image: postgres:15
    container_name: my_bot_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

    networks:
      - default

  telegram_bot:
    build: .
    volumes:
      - .:/app
      - .env:/root/.env
    container_name: telegram_bot
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: my_bot_db
      DB_PORT: ${DB_PORT}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: /bin/sh -c "goose -dir /root/migrations postgres 'host=${DB_HOST} port=${DB_PORT} user=${DB_USER} password=${DB_PASSWORD} dbname=${DB_NAME} sslmode=disable' up && /root/telegram_bot"
    networks:
      - default

networks:
  default:
    driver: bridge
